{"version":3,"file":"Regression.js","sourceRoot":"","sources":["../../../../../src/.internal/plugins/regression/Regression.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Regression plugin.\r\n *\r\n * Uses regression-js library by Tom Alexander\r\n * http://tom-alexander.github.io/regression-js/\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as regression from \"regression\";\r\nimport { Plugin } from \"../../core/utils/Plugin\";\r\nimport { XYSeries } from \"../../charts/series/XYSeries\";\r\nimport { Optional } from \"../../core/utils/Type\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $object from \"../../core/utils/Object\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A module which automatically calculates data for for trend lines using\r\n * various regression algorithms.\r\n *\r\n * By pushing an instance of [[Regression]] into `plugin` list of\r\n * any [[XYSeries]], it automatically recalculates and overrides its\r\n * data to show regression trend line, inestead of the source values.\r\n *\r\n * Example:\r\n *\r\n * ```TypeScript\r\n * let regseries = chart.series.push(new am4charts.LineSeries());\r\n * regseries.dataFields.valueY = \"value\";\r\n * regseries.dataFields.dateX = \"date\";\r\n *\r\n * let reg = regseries.plugins.push(new am4plugins_regression.Regression());\r\n * reg.method = \"polynomial\";\r\n * ```\r\n * ```JavaScript\r\n * var regseries = chart.series.push(new am4charts.LineSeries());\r\n * regseries.dataFields.valueY = \"value\";\r\n * regseries.dataFields.dateX = \"date\";\r\n *\r\n * var reg = regseries.plugins.push(new am4plugins_regression.Regression());\r\n * reg.method = \"polynomial\";\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"series\": [{\r\n *     // ...\r\n *   }, {\r\n *     \"type\": \"LineSeries\",\r\n *     \"dataFields\": {\r\n *       \"valueY\": \"value\",\r\n *       \"dateX\": \"date\"\r\n *     },\r\n *     \"plugins\": [{\r\n *       \"type\": \"Regression\",\r\n *       \"method\": \"polynomial\"\r\n *     }]\r\n *   }]\r\n * }\r\n * ```\r\n *\r\n * @since 4.2.2\r\n */\r\nexport class Regression extends Plugin {\r\n\r\n\t/**\r\n\t * A series object that will be used for the trend line.\r\n\t */\r\n\tpublic target: Optional<XYSeries>;\r\n\r\n\t/**\r\n\t * Method\r\n\t */\r\n\tprotected _method: \"linear\" | \"polynomial\" = \"linear\";\r\n\r\n\t/**\r\n\t * Options\r\n\t */\r\n\tprotected _options: { [index: string]: any } = {};\r\n\r\n\t/**\r\n\t * Calculated data.\r\n\t */\r\n\tprotected _data: Optional<any[]>;\r\n\r\n\t/**\r\n\t * Should skip next \"beforedatavalidated\" event?\r\n\t */\r\n\tprotected _skipValidatedEvent: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\t// Nothing to do here\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic init() {\r\n\t\tsuper.init();\r\n\t\tthis.processSeries();\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates series with required events and adapters used to hijack its\r\n\t * data.\r\n\t */\r\n\tprivate processSeries(): void {\r\n\r\n\t\tthis.invalidateData();\r\n\r\n\t\t// Invalidate calculated data whenever data updates\r\n\t\tthis._disposers.push(this.target.events.on(\"beforedatavalidated\", (ev) => {\r\n\t\t\tif (this._skipValidatedEvent) {\r\n\t\t\t\tthis._skipValidatedEvent = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.calcData();\r\n\t\t}));\r\n\r\n\t\t// Set up adpater for data\r\n\t\tthis.target.adapter.add(\"data\", () => {\r\n\t\t\tif (this._data === undefined) {\r\n\t\t\t\tthis.calcData();\r\n\t\t\t}\r\n\t\t\treturn this._data;\r\n\t\t});\r\n\t}\r\n\r\n\tprivate invalidateData(): void {\r\n\t\tthis._data = undefined;\r\n\t}\r\n\r\n\tprivate calcData(): void {\r\n\t\tthis._data = [];\r\n\t\tconst series = this.target;\r\n\r\n\t\t// Get series' data (global or series own)\r\n\t\tlet seriesData: any = this.target.data;\r\n\t\tif (!seriesData || seriesData.length == 0) {\r\n\t\t\tseriesData = (<any>this.target.baseSprite).data;\r\n\t\t}\r\n\r\n\t\t// Build matrix for the regression function\r\n\t\tlet matrix: any = [];\r\n\t\tfor(let i = 0; i < seriesData.length; i++) {\r\n\t\t\tmatrix.push([\r\n\t\t\t\tseries.dataFields.valueX ? seriesData[i][series.dataFields.valueX] : i,\r\n\t\t\t\tseries.dataFields.valueY ? seriesData[i][series.dataFields.valueY] : i\r\n\t\t\t]);\r\n\t\t}\r\n\r\n\t\t// Calculate regression values\r\n\t\tlet result: any = [];\r\n\t\tswitch(this.method) {\r\n\t\t\tcase \"polynomial\":\r\n\t\t\t\tresult = regression.polynomial(matrix, this.options);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tresult = regression.linear(matrix, this.options);\r\n\t\t}\r\n\r\n\t\t// Build data\r\n\t\tthis._data = [];\r\n\t\tfor(let i = 0; i < result.points.length; i++) {\r\n\t\t\tlet item: any = {};\r\n\t\t\t$object.each(this.target.dataFields, (key, val) => {\r\n\t\t\t\tif (key == \"valueX\") {\r\n\t\t\t\t\titem[val] = result.points[i][0];\r\n\t\t\t\t}\r\n\t\t\t\telse if (key == \"valueY\") {\r\n\t\t\t\t\titem[val] = result.points[i][1];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\titem[val] = seriesData[i][val];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis._data.push(item);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Method to calculate regression.\r\n\t *\r\n\t * Supported values: \"linear\" (default), \"polynomial\".\r\n\t *\r\n\t * @default linear\r\n\t * @param  value  Method\r\n\t */\r\n\tpublic set method(value: \"linear\" | \"polynomial\") {\r\n\t\tif (this._method != value) {\r\n\t\t\tthis._method = value;\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Method\r\n\t */\r\n\tpublic get method(): \"linear\" | \"polynomial\" {\r\n\t\treturn this._method;\r\n\t}\r\n\r\n\t/**\r\n\t * Regression output options.\r\n\t *\r\n\t * Below are default alues.\r\n\t *\r\n\t * ```JSON\r\n\t * {\r\n\t *   order: 2,\r\n\t *   precision: 2,\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://github.com/Tom-Alexander/regression-js#configuration-options} About options\r\n\t * @param  value  Options\r\n\t */\r\n\tpublic set options(value: { [index: string]: any}) {\r\n\t\tif (this._options != value) {\r\n\t\t\tthis._options = value;\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Options\r\n\t */\r\n\tpublic get options(): { [index: string]: any} {\r\n\t\treturn this._options;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Regression\"] = Regression;\r\n"]}